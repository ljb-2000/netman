#!/usr/bin/env python
# right now, this is a simple script that invokes that event class after parsing out standard input from rsyslog
from netman import event
import sys,os
import time
# log handling; may be replaced with absolute file path for troubleshooting

#STDOUT = ""
#STDERR = ""

STDOUT = "/dev/null"
STDERR = "/dev/null"

dropdebug = []

# don't edit below this line
sys.stderr = open(STDERR,'a+')
sys.stdout = open(STDOUT,'a+')
i = ''
MessageClear = ''
TagClear = ''

if len(sys.argv) < 1:
	sys.exit()
def log(what):
	sys.stdout.write("%s\n" % what)
try:
	i = sys.argv[1].split("{{{");
	T = i[1] + ' ' + time.strftime('%Y')
	TimeStamp = int(time.mktime(time.strptime(T,'%b %d %H:%M:%S %Y')))
	Severity = i[2]
	Address = i[3]
	if Address == 'localhost' or Address == '127.0.0.1':
		sys.exit(1)

	# drop debug messages if in address array above
	if Address in dropdebug and int(Severity) > 5:
		sys.exit()
	try:
		l = i[6].split('%')
		j = l[1].split(":",1)
		Tag = j[0]
		Message = j[1]
	except:
	# reported = l[0]# need to reformat date to timestamp first
		Message = i[6]
		try:	
			lt = i[5].split('[')
			Tag = lt[0].strip(":")
		except:
			Tag = i[5]
	Message = Message.replace("'","")
	Tag = Tag.replace("%","")
	Tag = Tag.replace(":","")
	#log("Message: %s" % Message)
	Facility = i[7].strip("'")
	Facility.strip('''"''')
	if int(Severity) > 4:
		status = 2
	else:
		status = 0
	Tag = Tag.upper()
	if "C6KPWR-SP-4-PSREDUNDANTBOTHSUPPLY" in Tag or "C6KPWR-SP-4-PSOK" in Tag:
		TagClear = "C6KPWR"
	if "C6KENV-SP-4-PSFANOK" in Tag:
		TagClear = "C6KENV-SP-4-PSFANFAILED"
	if "C6KENV-4-MINORTEMPALARMRECOVER" in Tag:
		TagClear = "C6KENV-4-MINORTEMPALARM"
	if "Type: Power Supply, State: Green" in Message:
		MessageClear = "Type: Power Supply, State: Red"
	if "Type: DHCP, State: Green" in Message:
		MessageClear = "Type: DHCP, State: Red"
	if "Type: NTP Synchronization, State: Green" in Message:
		MessageClear = "Type: NTP Synchronization, State: Red"

	event.Event(Message,Address=Address,Facility=Facility,Severity=Severity,Source="SYSLOG",Tag=Tag,Status=status,Reported=TimeStamp,MessageClear=MessageClear,TagClear=TagClear)
except:
	# for help with errors, uncomment line below
	#log('general error for %s' % (sys.argv))
	sys.exit(0)
